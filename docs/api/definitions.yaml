BaseResponse:
  properties:
    result:
      type: boolean

CoinType:
  type: string
  description: Specifies coin type
  enum:
    - eth
    - btc
    - bch
    - zam

CreateWalletRequest:
  properties:
    coin:
      $ref: "./index.yaml#/definitions/CoinType"
    wallet_name:
      type: string
      description: Optional name for user wallet
  required:
    - coin

WalletData:
  type: object
  properties:
    id:
      type: string
      format: uuid
      description: Unique wallet id
    coin:
      $ref: "./index.yaml#/definitions/CoinType"
    wallet_name:
      type: string
      description: Optional name for user wallet
    address:
      type: string
      description: Real address inside coin blockchain
    balances:
      type: object
      description: Wallet balances in different units
      additionalProperties:
        type: number
        properties:
          code:
            type: string
            description: Fiat currency or cypto-coin name
            example: btc
          text:
            type: number
            description: Value of balance in specified currency or crypto-coin units
            example: 100.12
  required:
    - id
    - coin
    - wallet_name
    - address
    - balance

WalletResponse:
  allOf:
    - $ref: "./index.yaml#/definitions/BaseResponse"
    - type: object
      properties:
        data:
          type: object
          properties:
            wallet:
              $ref: "./index.yaml#/definitions/WalletData"
    
AllWalletsResponse:
  allOf:
    - $ref: "./index.yaml#/definitions/BaseResponse"
    - type: object
      properties:
        data:
          type: object
          properties:
            сount:
              type: integer
              description: Count of returned transactions
            next:
              type: string
              description: Reference to the next page
            wallets:
              items:
                $ref: "./index.yaml#/definitions/WalletData"

TransactionStatus:
  description: |
    Transaction status, descriptions:
      - `waiting` - transaction on verification state
      - `decline` - transaction has been rejected due to some reason (the reason returned from `POST ../txs` request)
      - `pending` - transaction awaits until recipient create appropriate wallet
      - `cancel` - transaction canceled because recipient hasn't create wallet in time
      - `success` - transaction has been successfully performed
  type: string
  enum:
    - waiting
    - decline
    - pending
    - cancel
    - success

TransactionData:
  type: object
  properties:
    id:
      type: string
      description: Unique identifier of the transaction
    wallet_id:
      type: string
      format: uuid
      description: id of the wallet to which this transaction is related
    direction:
      type: string
      description: direction of the transaction
      enum:
        - incoming
        - outgoing
    created_at:
      description: time when transaction has been created
      type: number
      format: unix_utc
    status:
      description: current state of transaction
      $ref: "./index.yaml#/definitions/TransactionStatus"
    coin:
      description: short name of the coin
      $ref: "./index.yaml#/definitions/CoinType"
    recipient:
      type: string
      description: |
        **ONLY FOR OUTGOING TRANSACTIONS**
        transaction recipient, currently this field represents only phones
    sender:
      type: string
      description: |
        **ONLY FOR INCOMING TRANSACTIONS**
        transaction sender, currently this field represents only phones
    amount:
      type: object
      description: |
        The transaction amount in different units, one of them is the transaction coin unit, second is either fiat system-default currency (USD) or the currency which has been specified by `convert` query parameter.

        The amount are always positive despite of transaction direction.
      additionalProperties:
        type: number
        properties:
          code:
            type: string
            description: Fiat currency or cypto-currency name, always in lower-case
            example: btc
          text:
            type: number
            description: Amount in specified currency units
            example: 100.12
  required:
    - id
    - direction
    - recipient
    - amount

TransactionsGroup:
  type: object
  properties:
    start_date:
      type: number
      format: unix_utc
      description: |
        rounded begining of group (for hour - begining of hour, for day - begining of day etc.)
    end_date:
      type: number
      format: unix_utc
      description: |
        rounded end of group (for hour - end of hour, for day - end of day etc.)
    items:
      description: List of transactions belongs to this group
      items:
        $ref: "./index.yaml#/definitions/TransactionData"
    total_amount:
      type: object
      description: |
        The total group transactions amount in different units, one of them is default crypto currency (BTC now), second is either fiat system-default currency (USD) or the currency which has been specified by `convert` query parameter.

        The total amount may be negative number.
      additionalProperties:
        type: number
        properties:
          code:
            type: string
            description: Fiat currency or cypto-currency name, always in lower-case
            example: btc
          text:
            type: number
            description: Amount in specified currency units
            example: 100.12

SendTransactionRequest:
  properties:
    wallet_id:
      type: string
      description: Wallet for featured transaction
    recipient:
      type: string
      format: phone
      description: Recipient phone (only phone supported for now)
    amount:
      type: number
      description: Amount of transferred coins, must be greater then zero.

SendTransactionResponse:
  allOf:
    - $ref: "./index.yaml#/definitions/BaseResponse"
    - type: object
      properties:
        data:
          type: object
          properties:
            transaction:
              $ref: "./index.yaml#/definitions/TransactionData"
    
TransactionResponse:
  allOf:
    - $ref: "./index.yaml#/definitions/BaseResponse"
    - type: object
      properties:
        data:
          type: object
          properties:
            transaction:
              $ref: "./index.yaml#/definitions/TransactionData"

AllTransactionsResponse:
  allOf:
    - $ref: "./index.yaml#/definitions/BaseResponse"
    - type: object
      properties:
        data:
          type: object
          properties:
            сount:
              type: integer
              description: Count of returned transactions
            next:
              type: string
              description: Reference to the next page
            transactions:
              type: List
              items:
                $ref: "./index.yaml#/definitions/TransactionData"

GroupedTransactionsResponse:
  allOf:
    - $ref: "./index.yaml#/definitions/BaseResponse"
    - type: object
      properties:
        data:
          type: object
          properties:
            сount:
              type: integer
              description: Count of returned transactions
            next:
              type: string
              description: Reference to the next page
            transactions:
              type: List
              items:
                $ref: "./index.yaml#/definitions/TransactionData"

Errors:
  allOf:
    - $ref: "./index.yaml#/definitions/BaseResponse"
    - type: object
      properties:
        errors:
          type: array
          items:
            type: object
            anyOf:
              - $ref: './index.yaml#/definitions/FieldError'
              - $ref: './index.yaml#/definitions/Error'
        
Error:
  description: Error format which returned by handlers (usually internal errors)
  type: object
  properties:
    message:
      type: string
      description: Describes error

FieldError:
  type: object
  description: |
    This field is presented in case when error is cause of missed, misstyped or wrong formatted request 
    parameter passed throught POST JSON body, query or path
  properties:
    message:
      type: string
      description: Describes what wrong with this field
    name:
      type: string
      description: Name of parameter which occurs error
    input:
      type: string
      description: Describes the way in which this parameter has come
  required:
    - message
    - name
    - input
